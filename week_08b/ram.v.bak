// Single port RAM with single read/write address 

module ram 
#(parameter DATA_WIDTH=8, parameter ADDR_WIDTH=4)
(
	input [(DATA_WIDTH-1):0] data_in,
	output reg [(DATA_WIDTH-1):0] data_out,
	input [(ADDR_WIDTH-1):0] addr,
	input re, we, clk
);

	// Declare the RAM variable
	reg [DATA_WIDTH-1:0] ram[2**ADDR_WIDTH-1:0];

	always @ (posedge clk)
	begin
		// Write
		if (we)
			ram[addr] <= data_in;
	end

	always @ (posedge clk)
	begin
		// Read
		if (re)
			data_out <= ram[addr];
	end
	
endmodule
